/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ImgProcessing.VideoCap;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.JFrame;
import ImgProcessing.FaceDetection;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfPoint2f;
import org.opencv.imgcodecs.Imgcodecs;

/**
 *
 * @author Elahe <e.emami1375@gmail.com>
 */
public class dlgFaceLandmark extends javax.swing.JDialog {

  private boolean isRunning = false;
  private VideoCap videoCap;
  private Mat mat;
  private MatOfPoint2f landmark;

  public static MatOfPoint2f showAndGetFaceMark() {
    System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

    JFrame frm = new JFrame();
    dlgFaceLandmark dlg = new dlgFaceLandmark(frm, true);
    dlg.startCap();
    dlg.setSize(640, 480 + dlg.btnOK.getHeight());

    dlg.setVisible(true);
    //System.out.println("after click ok...");
    dlg.videoCap.stopCap();

    frm.dispose();
    dlg.dispose();
    //System.out.println("after dispose...");

    //System.out.println("landmark: " + dlg.landmark.dump());
    Imgcodecs.imwrite("test.jpg", dlg.mat);
    //System.out.println("image saved");
    
    return dlg.landmark;
  }

  private int close() {
    isRunning = false;
    setVisible(false);
    this.dispose();

    return DISPOSE_ON_CLOSE;
  }

  private void startCap() {
    isRunning = true;
    videoCap = new VideoCap();
    videoCap.startCap();
    new MyThread(videoCap).start();

  }

  private dlgFaceLandmark(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    btnOK = new javax.swing.JButton();
    pnlCapFrame = new javax.swing.JPanel();

    setDefaultCloseOperation(close());
    setTitle("FaceLandmark");

    btnOK.setText("OK");
    btnOK.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnOKActionPerformed(evt);
      }
    });
    getContentPane().add(btnOK, java.awt.BorderLayout.SOUTH);

    pnlCapFrame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    pnlCapFrame.setPreferredSize(new java.awt.Dimension(640, 480));

    javax.swing.GroupLayout pnlCapFrameLayout = new javax.swing.GroupLayout(pnlCapFrame);
    pnlCapFrame.setLayout(pnlCapFrameLayout);
    pnlCapFrameLayout.setHorizontalGroup(
      pnlCapFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    pnlCapFrameLayout.setVerticalGroup(
      pnlCapFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );

    getContentPane().add(pnlCapFrame, java.awt.BorderLayout.CENTER);

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
    // TODO add your handling code here:

    isRunning = false;
  }//GEN-LAST:event_btnOKActionPerformed

  private void paint(BufferedImage img) {
    Graphics g = pnlCapFrame.getGraphics();
    //System.out.println(img.getHeight() + " , " + img.getWidth());
    g.drawImage(img, 0, 0, this);

  }

  class MyThread extends Thread {

    VideoCap videoCap;

    public MyThread(VideoCap videoCap) {
      this.videoCap = videoCap;
    }

    @Override
    public void run() {
      //System.out.println("run");
      FaceDetection faceDetection = new FaceDetection();

      while (isRunning) {
        mat = faceDetection.startDetection(videoCap.getMat());

        BufferedImage img = videoCap.matToImg(mat);

        paint(img);

        try {
          sleep(30);

        } catch (InterruptedException ex) {
          ex.printStackTrace();
        }

      }
      landmark = faceDetection.getLandmark();
      close();

    }

  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnOK;
  private javax.swing.JPanel pnlCapFrame;
  // End of variables declaration//GEN-END:variables
}
